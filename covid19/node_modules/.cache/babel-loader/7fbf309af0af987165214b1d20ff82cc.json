{"ast":null,"code":"import _regeneratorRuntime from\"/home/nagln/Documents/GitHub/COVID19-tracker/covid19/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nagln/Documents/GitHub/COVID19-tracker/covid19/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/nagln/Documents/GitHub/COVID19-tracker/covid19/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{FormControl,Select,MenuItem,Card,CardContent}from'@material-ui/core';import'./App.css';import InfoBox from'./InfoBox';import Map from'./Map';import Table from'./Table';import{sortData,prettyPrintStat}from'./util';import LineGraph from'./LineGraph';import'leaflet/dist/leaflet.css';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState('worldwide'),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch('https://disease.sh/v3/covid-19/all').then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app_left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app_header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID 19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app_dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",onChange:onCountryChange,value:country},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app_stats\"},/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"cases\",onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus cases\",cases:prettyPrintStat(countryInfo.todayCases),total:countryInfo.cases}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType('recovered');},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:countryInfo.recovered}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:countryInfo.deaths})),/*#__PURE__*/React.createElement(Map,{casesType:casesType,countries:mapCountries,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(Card,{className:\"app_right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Live cases\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",null,\"Worldwide new \",casesType),/*#__PURE__*/React.createElement(LineGraph,{casesType:casesType}))));}export default App;","map":{"version":3,"sources":["/home/nagln/Documents/GitHub/COVID19-tracker/covid19/src/App.js"],"names":["React","useState","useEffect","FormControl","Select","MenuItem","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796});\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  }, [])\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, []);\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url =\n    countryCode === 'worldwide'\n    ? 'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h1>COVID 19 TRACKER</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <InfoBox\n            active={casesType === \"cases\"}\n            onClick={e => setCasesType('cases')}\n            title=\"Coronavirus cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={countryInfo.cases}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType('recovered')}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={countryInfo.recovered}\n          />\n          <InfoBox\n            active={casesType === \"deaths\"}\n            onClick={e => setCasesType('deaths')}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={countryInfo.deaths}\n          />\n        </div>\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live cases</h3>\n          <Table countries={tableData}/>\n          <h3>Worldwide new {casesType}</h3>\n          <LineGraph casesType={casesType}/>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}