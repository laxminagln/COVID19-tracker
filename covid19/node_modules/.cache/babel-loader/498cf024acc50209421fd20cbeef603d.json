{"ast":null,"code":"var _jsxFileName = \"/home/nagln/Downloads/covid19/src/util.js\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from 'react-leaflet';\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n  return sortedData;\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info_container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  className: \"info_flag\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info_name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info_confirmed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }\n}, \"Cases: \", numeral(country.cases).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info_recovered\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }\n}, \"Recovered: \", numeral(country.recovered).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info_deaths\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 11\n  }\n}, \"Deaths: \", numeral(country.deaths).format(\"0,0\"))))));","map":{"version":3,"sources":["/home/nagln/Downloads/covid19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from 'react-leaflet';\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nexport const sortData = (data) => {\n  const sortedData = [...data];\n  sortedData.sort((a,b) => (a.cases > b.cases ? -1:1));\n  return sortedData;\n}\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType='cases') => (\n  data.map(country =>(\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info_container\">\n          <div\n            style={{backgroundImage: `url(${country.countryInfo.flag})`}}\n            className=\"info_flag\"\n          ></div>\n          <div className=\"info_name\">{country.country}</div>\n          <div className=\"info_confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n          <div className=\"info_recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n          <div className=\"info_deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n        </div>\n      </Popup>\n    </Circle>\n  ))\n);\n"]},"metadata":{},"sourceType":"module"}