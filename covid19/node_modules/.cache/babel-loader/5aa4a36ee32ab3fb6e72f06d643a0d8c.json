{"ast":null,"code":"import _regeneratorRuntime from\"/home/nagln/Downloads/covid19/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nagln/Downloads/covid19/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/nagln/Downloads/covid19/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Line}from\"react-chartjs-2\";import numeral from\"numeral\";import'./LineGraph.css';var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRatio:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"ll\"}}],yAxes:[{gridLines:{display:false},ticks:{callback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};var buildChartData=function buildChartData(data,casesType){var chartData=[];var lastDataPoint;for(var date in data.cases){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];}return chartData;};function LineGraph(_ref){var casesType=_ref.casesType;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(function(response){return response.json();}).then(function(data){var chartData=buildChartData(data,casesType);setData(chartData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[casesType]);return/*#__PURE__*/React.createElement(\"div\",{className:\"linegraph\"},(data===null||data===void 0?void 0:data.length)>0&&/*#__PURE__*/React.createElement(Line,{data:{datasets:[{backgroundColor:\"rgba(204, 16, 52, 0.5)\",borderColor:\"#CC1034\",data:data}]},options:options}));}export default LineGraph;","map":{"version":3,"sources":["/home/nagln/Downloads/covid19/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport './LineGraph.css';\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div className=\"linegraph\">\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}